1. Write pseudocode for calculating the Greatest Common Divisor (GCD) of two numbers.

Pseudocode for calculating the Greatest Common Divisor (GCD) of two numbers,

function calculateGCD(a, b)
    result ← min(a, b)
    while result > 0 do
        if a mod result = 0 and b mod result = 0 then
            break
        else
            result ← result - 1
        end if
    end while
    return result
end function

2. What is the time complexity of this calculation in Big-O notation?

Time complexity determination:
- result = min(a, b) takes constant time
- Then the while loop runs for min(a, b) times in the worst case because if in the worst case we might need to check each number in the range of the smaller number. So, the time complexity is O(min(a, b))
- If the condition is not met, result = result – 1 takes constant time.

So, in the worst case, the time complexity is O(min(a, b)).

3. Show that the output of this algorithm is indeed the Greatest Common Divisor.

Let's assume that the inputs of the algorithm are a = 48 and b = 18.
- Declare a variable result and initialize it to min(a, b) = min(48, 18) = 18
- For result = 18 and result > 0, do
    - As 48 mod 18 = 12 and 18 mod 18 = 0, go to the next iteration of the while loop with result = 17
- For result = 17 and result > 0, do
    - As 48 mod 17 = 14 and 18 mod 17 = 1, go to the next iteration of the while loop with result = 16
- For result = 16 and result > 0, do
    - As 48 mod 16 = 0 and 18 mod 16 = 2, go to the next iteration of the while loop with result = 15
- For result = 15 and result > 0, do
    - As 48 mod 15 = 3 and 18 mod 15 = 3, go to the next iteration of the while loop with result = 14
- For result = 14 and result > 0, do
    - As 48 mod 14 = 6 and 18 mod 14 = 4, go to the next iteration of the while loop with result = 13
- For result = 13 and result > 0, do
    - As 48 mod 13 = 9 and 18 mod 13 = 5, go to the next iteration of the while loop with result = 12
- For result = 12 and result > 0, do
    - As 48 mod 12 = 0 and 18 mod 12 = 6, go to the next iteration of the while loop with result = 11
- For result = 11 and result > 0, do
    - As 48 mod 11 = 4 and 18 mod 11 = 7, go to the next iteration of the while loop with result = 10
- For result = 10 and result > 0, do
    - As 48 mod 10 = 8 and 18 mod 10 = 8, go to the next iteration of the while loop with result = 9
- For result = 9 and result > 0, do
    - As 48 mod 9 = 3 and 18 mod 9 = 0, go to the next iteration of the while loop with result = 8
- For result = 8 and result > 0, do
    - As 48 mod 8 = 0 and 18 mod 8 = 2, go to the next iteration of the while loop with result = 7
- For result = 7 and result > 0, do
    - As 48 mod 7 = 6 and 18 mod 7 = 4, go to the next iteration of the while loop with result = 6
- For result = 6 and result > 0, do
    - As 48 mod 6 = 0 and 18 mod 6 = 0, the condition is satisfied, break the loop
- The loop exits with result = 6
- Return result = 6

Thus, the Greatest Common Divisor (GCD) of 48 and 18 is indeed 6, which matches the output of the algorithm.
